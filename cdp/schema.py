# # DO NOT EDIT THIS FILE!
# #
# # This file is generated from the CDP specification using AST. If you need to make
# # changes, edit the generator and regenerate all of the modules.

from __future__ import annotations
"""CDP domain: Schema (deprecated)

This domain is deprecated."""
import typing
import enum
from dataclasses import dataclass
from .util import T_JSON_DICT
from deprecated.sphinx import deprecated
None


@dataclass
class Domain:
    """Description of the protocol domain."""
    name: str
    version: str

    def to_json(self) ->T_JSON_DICT:
        json_data: T_JSON_DICT = dict()
        json_data['name'] = self.name
        json_data['version'] = self.version
        return json_data

    @classmethod
    def from_json(cls, json_obj: T_JSON_DICT) ->Domain:
        return cls(name=json_obj['name'], version=json_obj['version'])


def get_domains() ->typing.Generator[T_JSON_DICT, T_JSON_DICT, typing.List[
    Domain]]:
    """Returns supported domains.


:returns: List of supported domains."""
    cmd_dict = {'method': 'Schema.getDomains'}
    json_result = yield cmd_dict
    return [Domain.from_json(i) for i in json_result['domains']]
