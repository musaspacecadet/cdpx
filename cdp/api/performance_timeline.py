# # DO NOT EDIT THIS FILE!
# #
# # This file is generated from the CDP specification using AST. If you need to make
# # changes, edit the generator and regenerate all of the modules.

from __future__ import annotations
"""API wrapper for the PerformanceTimeline domain."""
import typing
from ..util import CDPClient
from .. import performance_timeline as _performance_timeline_module
None


class PerformanceTimelineAPI:
    """Provides an API wrapper for the 'PerformanceTimeline' domain commands.

**EXPERIMENTAL**

Domain Description:
Reporting of performance timeline events, as specified in
https://w3c.github.io/performance-timeline/#dom-performanceobserver."""

    def __init__(self, client: CDPClient) ->None:
        self.client: CDPClient = client

    def enable(self, event_types: typing.List[str], _response_timeout:
        typing.Optional[float]=None) ->None:
        """Previously buffered events would be reported before method returns.
See also: timelineEventAdded

NOTE: This is a blocking wrapper method that executes the underlying generator command using the client.


:param ...:

:param event_types: The types of event to report, as specified in https://w3c.github.io/performance-timeline/#dom-performanceentry-entrytype The specified filter overrides any previous filters, passing empty filter disables recording. Note that not all types exposed to the web platform are currently supported.

:param _response_timeout: Optional timeout in seconds for the command."""
        gen = _performance_timeline_module.enable(event_types=event_types)
        return self.client.send(gen, _response_timeout=_response_timeout)
