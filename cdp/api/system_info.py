# # DO NOT EDIT THIS FILE!
# #
# # This file is generated from the CDP specification using AST. If you need to make
# # changes, edit the generator and regenerate all of the modules.

from __future__ import annotations
"""API wrapper for the SystemInfo domain."""
import typing
from ..util import CDPClient
from .. import system_info as _system_info_module
None


class SystemInfoAPI:
    """Provides an API wrapper for the 'SystemInfo' domain commands.

**EXPERIMENTAL**

Domain Description:
The SystemInfo domain defines methods and events for querying low-level system information."""

    def __init__(self, client: CDPClient) ->None:
        self.client: CDPClient = client

    def get_feature_state(self, feature_state: str, _response_timeout:
        typing.Optional[float]=None) ->bool:
        """Returns information about the feature state.

NOTE: This is a blocking wrapper method that executes the underlying generator command using the client.


:param ...:

:param feature_state:

:param _response_timeout: Optional timeout in seconds for the command.


:returns:"""
        gen = _system_info_module.get_feature_state(feature_state=feature_state
            )
        return self.client.send(gen, _response_timeout=_response_timeout)

    def get_info(self, _response_timeout: typing.Optional[float]=None
        ) ->typing.Tuple[_system_info_module.GPUInfo, str, str, str]:
        """Returns information about the system.

NOTE: This is a blocking wrapper method that executes the underlying generator command using the client.


:param ...:

:param _response_timeout: Optional timeout in seconds for the command.


:returns: A tuple with the following items:

    1. **gpu** - Information about the GPUs on the system.
    2. **modelName** - A platform-dependent description of the model of the machine. On Mac OS, this is, for example, 'MacBookPro'. Will be the empty string if not supported.
    3. **modelVersion** - A platform-dependent description of the version of the machine. On Mac OS, this is, for example, '10.1'. Will be the empty string if not supported.
    4. **commandLine** - The command line string used to launch the browser. Will be the empty string if not supported."""
        gen = _system_info_module.get_info()
        return self.client.send(gen, _response_timeout=_response_timeout)

    def get_process_info(self, _response_timeout: typing.Optional[float]=None
        ) ->typing.List[_system_info_module.ProcessInfo]:
        """Returns information about all running processes.

NOTE: This is a blocking wrapper method that executes the underlying generator command using the client.


:param ...:

:param _response_timeout: Optional timeout in seconds for the command.


:returns: An array of process info blocks."""
        gen = _system_info_module.get_process_info()
        return self.client.send(gen, _response_timeout=_response_timeout)
